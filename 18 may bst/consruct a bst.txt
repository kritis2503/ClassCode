import java.util.*;

public class Main{
    public static class Node{
        int data;
        Node left;
        Node right;
        
        Node (int data,Node left,Node right)
        {
            this.data=data;
            this.left=left;
            this.right=right;
        }
    }
    public static Node construct(int []a,int left,int right)
    {
        if(right<left)
            return null;
        int mid=(left+right)/2;
        Node root=new Node(a[mid],null,null);
        Node l=construct(a,left,mid-1);
        Node r=construct(a,mid+1,right);
        root.left=l;
        root.right=r;
        return root;
        
    }
     public static void display(Node node) {
    if (node == null) {
      return;
    }

    String str = "";
    str += node.left == null ? "." : node.left.data + "";
    str += " <- " + node.data + " -> ";
    str += node.right == null ? "." : node.right.data + "";
    System.out.println(str);

    display(node.left);
    display(node.right);
  }
  static int ans=-1;
  public static int min(Node node)
  {
      if(node==null)
        return ans;
     ans=node.data;   
     ans=min(node.left);
    return ans;
  }
  static int ansm=0;
  public static int  max(Node node)
  {
      if(node==null)
        return ansm;
        
    ansm=node.data;
     ansm=max(node.right);
     return ansm;
  }
  public static boolean find(Node node,int d)
  {
      if(node==null)
        return false;
        
    if(d==node.data)
        return true;
    if(d>node.data)
    {
        Boolean ans=find(node.right,d);
        if(ans)
            return true;
    }
    else
    if(d<node.data)
    {
        Boolean ans=find(node.left,d);
        if(ans)
            return true;
    }
    return false;
  }
  public static Node lca(Node node,int d1,int d2)
  {
      if(node==null)
        return null;
       // Node r=new Node();
        
    if(node.data>d1 && node.data>d2)
         return lca(node.left,d1,d2);
        
    if(node.data<d2 && node.data<d1)
         return lca(node.right,d1,d2);
    else
        return node;
        //return r;
  }

public static void main(String[] args) {

// write your code here.
int [] a={12,25,37,50,62,75,95};
Node r=construct(a,0,a.length-1);
display(r);
System.out.println(min(r));
System.out.println(max(r));
System.out.println(find(r,7));
System.out.println(find(r,62));
Node ans=lca(r,37,95);
System.out.println(ans.data);

 }
}